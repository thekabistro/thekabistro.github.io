{"version":3,"sources":["webpack:///./src/components/nav.js","webpack:///./src/components/layout.js","webpack:///./src/templates/md-holder.js","webpack:///./src/components/footer.js"],"names":["NavItem","props","useState","isOpen","updateIsOpen","className","onMouseOver","onFocus","onMouseLeave","onBlur","toggle","title","children","DropdownItem","to","Nav","query","render","data","pagesByCategory","allMarkdownRemark","edges","forEach","node","categoryKey","fields","category","push","organizedPagesByCategory","console","log","Object","keys","map","key","slug","frontmatter","Layout","MDTemplate","post","markdownRemark","dangerouslySetInnerHTML","__html","html","Footer","Date","getFullYear"],"mappings":"+KAkBA,SAASA,EAAQC,GAAQ,IAAD,EACSC,oBAAS,GAAjCC,EADe,KACPC,EADO,KAGtB,OACE,yBACEC,UAAU,WACVC,YAAa,kBAAMF,GAAa,IAChCG,QAAS,kBAAMH,GAAa,IAC5BI,aAAc,kBAAMJ,GAAa,IACjCK,OAAQ,kBAAML,GAAa,IAC3BM,OAAQ,kBAAMN,GAAcD,IAC5BA,OAAQA,GAER,0BAAME,UAAU,oBAAoBJ,EAAMU,MAA1C,KAECV,EAAMW,UAKb,SAASC,EAAaZ,GACpB,OACE,yBAAKI,UAAU,YACb,kBAAC,OAAD,CAAMS,GAAIb,EAAMa,IAAKb,EAAMW,WAKjC,IAyCeG,EAzCH,kBACV,kBAAC,cAAD,CACEC,MAAK,aAiBLC,OAAQ,SAACC,GACP,IAAMC,EA9DZ,SAAkCC,GAChC,IAAMD,EAAkB,GAUxB,OARAC,EAAkBC,MAAMC,SAAQ,YAAe,IAAZC,EAAW,EAAXA,KAC3BC,EAAcD,EAAKE,OAAOC,SAE3BP,EAAgBK,KAAcL,EAAgBK,GAAe,IAElEL,EAAgBK,GAAaG,KAAKJ,MAG7BJ,EAmDqBS,CAAyBV,EAAKE,mBAEtD,OADAS,QAAQC,IAAIX,GAEV,yBAAKd,UAAU,UACZ0B,OAAOC,KAAKb,GAAiBc,KAAI,SAACP,GAAD,OAChC,kBAAC1B,EAAD,CAASW,MAAOe,GACbK,OAAOC,KAAKb,EAAgBO,IAAWO,KAAI,SAACC,GAAD,OAC1C,kBAACrB,EAAD,CAAcC,GAAIK,EAAgBO,GAAUQ,GAAKT,OAAOU,MACrDhB,EAAgBO,GAAUQ,GAAKE,YAAYzB,mB,UC9C/C0B,IApBA,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAChB,OACE,yBAAKP,UAAU,UACb,gCACE,kBAAC,OAAD,CAAMS,GAAG,IAAIT,UAAU,aACrB,8CAEF,kBAAC,EAAD,OAGF,8BAAOO,GACP,kBAAC,IAAD,S,oCCnBN,0HAIe,SAAS0B,EAAT,GAA+B,IACtCC,EADqC,EAARrB,KACjBsB,eAClB,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKD,EAAKH,YAAYzB,OACtB,yBAAK8B,wBAAyB,CAAEC,OAAQH,EAAKI,UAM9C,IAAM3B,EAAK,a,oCChBlB,mCAWe4B,IARA,WACb,OACE,gCACE,iCAAM,IAAIC,MAAOC,cAAjB,qB","file":"component---src-templates-md-holder-js-e3e46b5d037b538f8002.js","sourcesContent":["import { graphql, StaticQuery, Link } from 'gatsby'\nimport React, { useState } from 'react'\nimport './nav.css'\n\nfunction organizedPagesByCategory(allMarkdownRemark) {\n  const pagesByCategory = {}\n  // Iterate over all articles\n  allMarkdownRemark.edges.forEach(({ node }) => {\n    const categoryKey = node.fields.category\n\n    if (!pagesByCategory[categoryKey]) pagesByCategory[categoryKey] = []\n\n    pagesByCategory[categoryKey].push(node)\n  })\n\n  return pagesByCategory\n}\n\nfunction NavItem(props) {\n  const [isOpen, updateIsOpen] = useState(false)\n\n  return (\n    <div\n      className=\"nav-item\"\n      onMouseOver={() => updateIsOpen(true)}\n      onFocus={() => updateIsOpen(true)}\n      onMouseLeave={() => updateIsOpen(true)}\n      onBlur={() => updateIsOpen(true)}\n      toggle={() => updateIsOpen(!isOpen)}\n      isOpen={isOpen}\n    >\n      <span className=\"title title-font\">{props.title} </span>\n      {/* {isOpen && props.children} */}\n      {props.children}\n    </div>\n  )\n}\n\nfunction DropdownItem(props) {\n  return (\n    <div className=\"dropdown\">\n      <Link to={props.to}>{props.children}</Link>\n    </div>\n  )\n}\n\nconst Nav = () => (\n  <StaticQuery\n    query={graphql`\n      {\n        allMarkdownRemark {\n          edges {\n            node {\n              fields {\n                slug\n                category\n              }\n              frontmatter {\n                title\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data) => {\n      const pagesByCategory = organizedPagesByCategory(data.allMarkdownRemark)\n      console.log(pagesByCategory)\n      return (\n        <nav className=\"navbar\">\n          {Object.keys(pagesByCategory).map((category) => (\n            <NavItem title={category}>\n              {Object.keys(pagesByCategory[category]).map((key) => (\n                <DropdownItem to={pagesByCategory[category][key].fields.slug}>\n                  {pagesByCategory[category][key].frontmatter.title}\n                </DropdownItem>\n              ))}\n            </NavItem>\n          ))}\n        </nav>\n      )\n    }}\n  ></StaticQuery>\n)\n\n\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Footer from './footer'\nimport Nav from './nav'\nimport './layout.css'\nimport { Link } from 'gatsby'\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"layout\">\n      <header>\n        <Link to=\"/\" className=\"big-title\">\n          <h2>Kabir Kuriyan</h2>\n        </Link>\n        <Nav />\n      </header>\n\n      <main>{children}</main>\n      <Footer />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from '../components/layout'\nimport { graphql } from 'gatsby'\n\nexport default function MDTemplate({ data }) {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\nimport './footer.css'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Â© {new Date().getFullYear()} Kabir Kuriyan</p>\n    </footer>\n  )\n}\n\nexport default Footer\n"],"sourceRoot":""}